{"ast":null,"code":"import _objectSpread from\"E:/ReactJs/todoist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:/ReactJs/todoist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{useHistory}from\"react-router-dom\";import firebase from\"../Firebase/firebase_config\";var useLocalStorage=function useLocalStorage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),item=_useState2[0],setitem=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isloading=_useState4[0],setisloading=_useState4[1];var history=useHistory();useEffect(function(){if(!window.localStorage.getItem(\"Info\")){return history.push(\"/\");}setisloading(true);var todoref=firebase.database().ref(\"TODO\");todoref.on(\"value\",function(snapshot){var todo=snapshot.val();var Items=[];for(var id in todo){if(todo[id].Infoid===JSON.parse(Object(window.localStorage.getItem(\"Info\"))).id){//console.log(\"ID\",todo[id].Infoid)\nItems.push(_objectSpread({id:id},todo[id]));}}//console.log(\"Items\",JSON.stringify((Items)));\nsetitem(Items);setisloading(false);});},[history]);//console.log(\"getlocal firsbase\",item);\nreturn[JSON.parse(JSON.stringify(item)),isloading];};export default useLocalStorage;","map":{"version":3,"sources":["E:/ReactJs/todoist/src/component/API/getFirebaseTODo.tsx"],"names":["useEffect","useState","useHistory","firebase","useLocalStorage","item","setitem","isloading","setisloading","history","window","localStorage","getItem","push","todoref","database","ref","on","snapshot","todo","val","Items","id","Infoid","JSON","parse","Object","stringify"],"mappings":"iRAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5B,cAAwBH,QAAQ,CAAW,EAAX,CAAhC,wCAAOI,IAAP,eAAaC,OAAb,eACA,eAAkCL,QAAQ,CAAU,IAAV,CAA1C,yCAAOM,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,OAAO,CAAGP,UAAU,EAA1B,CAEAF,SAAS,CAAC,UAAM,CACd,GAAI,CAACU,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAL,CAA0C,CACxC,MAAOH,CAAAA,OAAO,CAACI,IAAR,CAAa,GAAb,CAAP,CACD,CACDL,YAAY,CAAC,IAAD,CAAZ,CACA,GAAMM,CAAAA,OAAO,CAAGX,QAAQ,CAACY,QAAT,GAAoBC,GAApB,CAAwB,MAAxB,CAAhB,CACAF,OAAO,CAACG,EAAR,CAAW,OAAX,CAAoB,SAACC,QAAD,CAAc,CAChC,GAAMC,CAAAA,IAAI,CAAGD,QAAQ,CAACE,GAAT,EAAb,CACA,GAAMC,CAAAA,KAAK,CAAG,EAAd,CACA,IAAK,GAAIC,CAAAA,EAAT,GAAeH,CAAAA,IAAf,CAAqB,CACnB,GACEA,IAAI,CAACG,EAAD,CAAJ,CAASC,MAAT,GACAC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAAChB,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAD,CAAjB,EAAwDU,EAF1D,CAGE,CACA;AACAD,KAAK,CAACR,IAAN,gBAAaS,EAAE,CAAFA,EAAb,EAAoBH,IAAI,CAACG,EAAD,CAAxB,GACD,CACF,CACD;AACAhB,OAAO,CAACe,KAAD,CAAP,CACAb,YAAY,CAAC,KAAD,CAAZ,CACD,CAfD,EAgBD,CAtBQ,CAsBN,CAACC,OAAD,CAtBM,CAAT,CAwBA;AACA,MAAO,CAACe,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACG,SAAL,CAAetB,IAAf,CAAX,CAAD,CAAmCE,SAAnC,CAAP,CACD,CA/BD,CAgCA,cAAeH,CAAAA,eAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"../Firebase/firebase_config\";\r\n\r\nconst useLocalStorage = () => {\r\n  const [item, setitem] = useState<object[]>([]);\r\n  const [isloading, setisloading] = useState<boolean>(true);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!window.localStorage.getItem(\"Info\")) {\r\n      return history.push(\"/\");\r\n    }\r\n    setisloading(true);\r\n    const todoref = firebase.database().ref(\"TODO\");\r\n    todoref.on(\"value\", (snapshot) => {\r\n      const todo = snapshot.val();\r\n      const Items = [];\r\n      for (let id in todo) {\r\n        if (\r\n          todo[id].Infoid ===\r\n          JSON.parse(Object(window.localStorage.getItem(\"Info\"))).id\r\n        ) {\r\n          //console.log(\"ID\",todo[id].Infoid)\r\n          Items.push({ id, ...todo[id] });\r\n        }\r\n      }\r\n      //console.log(\"Items\",JSON.stringify((Items)));\r\n      setitem(Items);\r\n      setisloading(false);\r\n    });\r\n  }, [history]);\r\n\r\n  //console.log(\"getlocal firsbase\",item);\r\n  return [JSON.parse(JSON.stringify(item)), isloading];\r\n};\r\nexport default useLocalStorage;\r\n"]},"metadata":{},"sourceType":"module"}