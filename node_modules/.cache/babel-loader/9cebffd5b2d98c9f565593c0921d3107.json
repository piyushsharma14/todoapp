{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"../Firebase/firebase_config\";\n\nconst useLocalStorage = () => {\n  _s();\n\n  const [item, setitem] = useState([]);\n  const [isloading, setisloading] = useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    if (!window.localStorage.getItem(\"Info\")) {\n      return history.push(\"/\");\n    }\n\n    setisloading(true);\n    const todoref = firebase.database().ref(\"TODO\");\n    todoref.on(\"value\", snapshot => {\n      const todo = snapshot.val();\n      const Items = [];\n\n      for (let id in todo) {\n        if (todo[id].Infoid === JSON.parse(Object(window.localStorage.getItem(\"Info\"))).id) {\n          //console.log(\"ID\",todo[id].Infoid)\n          Items.push({\n            id,\n            ...todo[id]\n          });\n        }\n      } //console.log(\"Items\",JSON.stringify((Items)));\n\n\n      setitem(Items);\n      setisloading(false);\n    });\n  }, [history]); //console.log(\"getlocal firsbase\",item);\n\n  return [JSON.parse(JSON.stringify(item)), isloading];\n};\n\n_s(useLocalStorage, \"DhWL252A6udnlEbbAAo4NYwmspw=\", false, function () {\n  return [useHistory];\n});\n\nexport default useLocalStorage;","map":{"version":3,"sources":["E:/ReactJs/todoist/src/component/API/getFirebaseTODo.tsx"],"names":["useEffect","useState","useHistory","firebase","useLocalStorage","item","setitem","isloading","setisloading","history","window","localStorage","getItem","push","todoref","database","ref","on","snapshot","todo","val","Items","id","Infoid","JSON","parse","Object","stringify"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,6BAArB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAW,EAAX,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAU,IAAV,CAA1C;AACA,QAAMQ,OAAO,GAAGP,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAL,EAA0C;AACxC,aAAOH,OAAO,CAACI,IAAR,CAAa,GAAb,CAAP;AACD;;AACDL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMM,OAAO,GAAGX,QAAQ,CAACY,QAAT,GAAoBC,GAApB,CAAwB,MAAxB,CAAhB;AACAF,IAAAA,OAAO,CAACG,EAAR,CAAW,OAAX,EAAqBC,QAAD,IAAc;AAChC,YAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACA,YAAMC,KAAK,GAAG,EAAd;;AACA,WAAK,IAAIC,EAAT,IAAeH,IAAf,EAAqB;AACnB,YACEA,IAAI,CAACG,EAAD,CAAJ,CAASC,MAAT,KACAC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAAChB,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAD,CAAjB,EAAwDU,EAF1D,EAGE;AACA;AACAD,UAAAA,KAAK,CAACR,IAAN,CAAW;AAAES,YAAAA,EAAF;AAAM,eAAGH,IAAI,CAACG,EAAD;AAAb,WAAX;AACD;AACF,OAX+B,CAYhC;;;AACAhB,MAAAA,OAAO,CAACe,KAAD,CAAP;AACAb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAfD;AAgBD,GAtBQ,EAsBN,CAACC,OAAD,CAtBM,CAAT,CAL4B,CA6B5B;;AACA,SAAO,CAACe,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACG,SAAL,CAAetB,IAAf,CAAX,CAAD,EAAmCE,SAAnC,CAAP;AACD,CA/BD;;GAAMH,e;UAGYF,U;;;AA6BlB,eAAeE,eAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"../Firebase/firebase_config\";\r\n\r\nconst useLocalStorage = () => {\r\n  const [item, setitem] = useState<object[]>([]);\r\n  const [isloading, setisloading] = useState<boolean>(true);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!window.localStorage.getItem(\"Info\")) {\r\n      return history.push(\"/\");\r\n    }\r\n    setisloading(true);\r\n    const todoref = firebase.database().ref(\"TODO\");\r\n    todoref.on(\"value\", (snapshot) => {\r\n      const todo = snapshot.val();\r\n      const Items = [];\r\n      for (let id in todo) {\r\n        if (\r\n          todo[id].Infoid ===\r\n          JSON.parse(Object(window.localStorage.getItem(\"Info\"))).id\r\n        ) {\r\n          //console.log(\"ID\",todo[id].Infoid)\r\n          Items.push({ id, ...todo[id] });\r\n        }\r\n      }\r\n      //console.log(\"Items\",JSON.stringify((Items)));\r\n      setitem(Items);\r\n      setisloading(false);\r\n    });\r\n  }, [history]);\r\n\r\n  //console.log(\"getlocal firsbase\",item);\r\n  return [JSON.parse(JSON.stringify(item)), isloading];\r\n};\r\nexport default useLocalStorage;\r\n"]},"metadata":{},"sourceType":"module"}